{"version":3,"file":"react-pagex.esm.js","sources":["../src/navigate.ts","../src/components/Link.tsx","../src/Parser.ts","../src/core.ts","../src/components/Route.tsx","../src/components/Routes.tsx","../src/index.ts"],"sourcesContent":["const navigate = {\n   go: (path: string) => {\n      window.history.pushState({ pagex: true, path }, \"\", path)\n      dispatchEvent(new PopStateEvent(\"popstate\", { state: { pagex: true, path } }))\n   },\n   reload: () => {\n      dispatchEvent(new PopStateEvent(\"popstate\", {\n         state: {\n            path: window.location.pathname,\n            pagex: true\n         }\n      }))\n   },\n   back: () => window.history.back(),\n   forward: () => window.history.forward()\n}\n\nexport default navigate","import { ComponentType, createElement, FC, ReactElement } from 'react'\nimport navigate from '../navigate'\n\nexport interface LinkProps {\n   children?: string | ReactElement;\n   label?: string;\n   href: string;\n   noHref?: boolean;\n   component?: ComponentType<any>\n}\n\n\nconst Link: FC<LinkProps> = ({ href, noHref, children, label, component }) => {\n   return createElement(component || 'a', {\n      ...(noHref !== false ? { href } : {}),\n      onClick: (e: any) => {\n         e.preventDefault()\n         navigate.go(href)\n      }\n   }, children || label)\n}\n\nexport default Link","import { match } from 'path-to-regexp'\n\n\nexport type Result = {\n   keys: string[];\n   pattern: RegExp;\n}\n\nexport type CallbackProps = { params: { [key: string]: string } }\nexport type Callback = (props: CallbackProps) => any;\n\nconst parseQuery = (q = window.location.search) => {\n   if (!q) return {}\n   const query_string = q.substring(1);\n   const vars = query_string.split('&')\n   const query: { [key: string]: string } = {}\n   for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split('=');\n      query[pair[0]] = pair[1]\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1])\n   }\n   return query\n}\n\nconst isMatch = (regex_path: string, path: string) => {\n   const m = match(regex_path, { decode: decodeURIComponent })\n   const matches = m(path)\n   return matches ? matches.params : null\n}\n\nconst Parser = {\n   isMatch,\n   parseQuery\n}\n\nexport default Parser","import { useMemo, useEffect, useState, useId } from 'react'\nimport Parser from \"./Parser\";\n\ntype RouteId = string\ntype GroupId = string\n\nexport interface RoutesProps {\n   dispatch: Function;\n   path: string;\n   params: { [key: string]: any } | false\n}\nexport interface GroupProps {\n   basepath?: string;\n   dispatch: Function;\n   onError?: () => void;\n   onFound?: (route: RoutesProps) => void;\n   routes: Map<RouteId, RoutesProps>\n}\n\ninterface CoreProps {\n   currentGroup: null | string,\n   groups: Map<GroupId, GroupProps>;\n   actives: Map<GroupId, RouteId[]>;\n}\n\nexport const core: CoreProps = {\n   currentGroup: null,\n   groups: new Map<GroupId, GroupProps>(),\n   actives: new Map<GroupId, RouteId[]>()\n}\n\n\nexport const useGroup = (props: Omit<GroupProps, 'routes' | 'dispatch'>) => {\n   const uid = useId()\n   const [d, dispatch] = useState(0)\n   const prevGroupId = useMemo(() => core.currentGroup, [])\n\n   // set current group\n   useMemo(() => {\n      core.currentGroup = uid\n      core.groups.set(uid, {\n         ...props,\n         dispatch: () => { },\n         routes: new Map\n      })\n   }, [])\n\n   useEffect(() => {\n      core.currentGroup = prevGroupId\n      const get = core.groups.get(uid)\n      if (get) {\n         core.groups.set(uid, {\n            ...get,\n            dispatch: () => dispatch(Math.random()),\n         })\n      }\n      return () => {\n         core.groups.delete(uid)\n      }\n   }, [])\n\n   useEffect(() => {\n      const group = core.groups.get(uid)\n      if (group) {\n         let found = false;\n\n         group.routes.forEach((route, routeId) => {\n            const path = group.basepath ? `${group.basepath}${route.path}` : route.path\n            const params = Parser.isMatch(path, window.location.pathname) || false\n            if (params || route.params) {\n               group.routes.set(routeId, {\n                  ...route,\n                  params\n               })\n               route.dispatch()\n            }\n            if (!found && params) {\n               group.onFound && group.onFound(route)\n               found = true\n            }\n         })\n\n         if (!found) {\n            group.onError && group.onError()\n         }\n      }\n   }, [d])\n}\n\nexport interface useRouteProps {\n   path: string;\n}\nexport const useRoute = (path: string) => {\n   const uid = useId()\n   const [d, dispatch] = useState(0)\n   const groupId = useMemo(() => core.currentGroup, [])\n   const group = useMemo(() => groupId && core.groups.get(groupId), [])\n   useMemo(() => {\n      if (group) {\n         group.routes.set(uid, {\n            dispatch: () => { },\n            path,\n            params: false\n         })\n      }\n   }, [])\n\n   const params = useMemo(() => {\n      let _params: RoutesProps['params'] = Parser.isMatch(path, window.location.pathname) || false;\n\n      return _params\n   }, [d])\n\n   useEffect(() => {\n      if (group) {\n         group.routes.set(uid, {\n            dispatch: () => dispatch(Math.random()),\n            path,\n            params\n         })\n      }\n      return () => {\n         if (group) {\n            group.routes.delete(uid)\n         }\n      }\n   }, [])\n\n   return group && group.routes.get(uid)?.params\n}\n\nwindow.addEventListener('popstate', () => {\n   core.groups.forEach((group) => group.dispatch())\n})","import React, { ComponentType } from 'react'\nimport { useRoute } from '../core'\n\ntype RenderProps = {\n   params?: { [key: string]: any };\n}\n\nexport interface RouteProps {\n   path: string;\n   render: ComponentType<RenderProps>;\n}\n\nconst Route = ({ path, render: Render }: RouteProps) => {\n   const params = useRoute(path)\n   return params ? <Render params={params} /> : <></>\n}\n\nexport default Route","import React, { ReactElement, ReactNode } from 'react'\nimport { useGroup, GroupProps } from '../core';\n\nexport type RoutesProps = Omit<GroupProps, 'dispatch' | 'routes'> & {\n   children: ReactElement | ReactNode\n}\n\nconst Routes = ({ children, ...props }: RoutesProps) => {\n   useGroup(props)\n   return <>{children}</>\n}\n\nexport default Routes","import Navigate from \"./navigate\"\nimport Link, { LinkProps } from \"./components/Link\"\nimport Route, { RouteProps } from \"./components/Route\"\nimport Routes, { RoutesProps } from \"./components/Routes\"\nimport Parser from \"./Parser\"\nexport { Link, Navigate, Routes, Route, Parser }\nexport type { LinkProps, RouteProps, RoutesProps }\nexport const useQuery = Parser.parseQuery\nexport * from './core'\n"],"names":["navigate","go","path","window","history","pushState","pagex","dispatchEvent","PopStateEvent","state","reload","location","pathname","back","forward","Link","href","noHref","children","label","component","createElement","onClick","e","preventDefault","parseQuery","q","search","query_string","substring","vars","split","query","i","length","pair","decodeURIComponent","isMatch","regex_path","m","match","decode","matches","params","Parser","core","currentGroup","groups","Map","actives","useGroup","props","uid","useId","useState","d","dispatch","prevGroupId","useMemo","set","routes","useEffect","get","Math","random","group","found","forEach","route","routeId","basepath","onFound","onError","useRoute","groupId","_params","addEventListener","Route","Render","render","React","Routes","useQuery"],"mappings":"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"}