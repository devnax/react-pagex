{"version":3,"file":"react-pagex.esm.js","sources":["../src/Parser.ts","../src/factory.ts","../src/components/RouteProvider.tsx","../src/hooks/Router.ts","../src/hooks/useMatch.ts","../src/components/Link.tsx","../src/components/Route.tsx","../src/index.ts"],"sourcesContent":["import { match } from 'path-to-regexp'\n\n\nexport type Result = {\n   keys: string[];\n   pattern: RegExp;\n}\n\nexport type CallbackProps = { params: { [key: string]: string } }\nexport type Callback = (props: CallbackProps) => any;\n\nconst parseQuery = (q = window.location.search) => {\n   if (!q) return {}\n   const query_string = q.substring(1);\n   const vars = query_string.split('&')\n   const query: { [key: string]: string } = {}\n   for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split('=');\n      query[pair[0]] = pair[1]\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1])\n   }\n   return query\n}\n\nconst isMatch = (regex_path: string, path: string) => {\n   const m = match(regex_path, { decode: decodeURIComponent })\n   const matches = m(path)\n   return matches ? matches.params : null\n}\n\nconst Parser = {\n   isMatch,\n   parseQuery\n}\n\nexport default Parser","import Parser from \"./Parser\";\nexport type PathString = string\nexport type FactoryId = string\nexport interface FactoryItem {\n   id: string;\n   params: { [key: string]: any } | null;\n   path?: string;\n   dispatch: () => void;\n}\n\nexport const Factory = new Map<FactoryId, FactoryItem>()\n\nexport const Excute = () => {\n   let isMatched = false;\n   const invalids: FactoryItem[] = []\n\n   Factory.forEach((item, key) => {\n      if (item.params) {\n         Factory.set(key, { ...item, params: null })\n         item.dispatch()\n      }\n      if (item.path) {\n         const params = Parser.isMatch(item.path, window.location.pathname)\n         if (params) {\n            isMatched = true\n            Factory.set(key, { ...item, params })\n            item.dispatch()\n         }\n      } else {\n         invalids.push(item)\n      }\n   })\n\n   !isMatched && invalids.forEach((item) => {\n      Factory.set(item.id, { ...item, params: {} })\n      item.dispatch()\n   })\n}\n\nwindow.addEventListener('popstate', () => Excute())","import { useEffect } from 'react'\nimport { Excute } from '../factory'\ninterface Props {\n   children: any;\n}\n\nconst RouteProvider = ({ children }: Props) => {\n   useEffect(() => {\n      Excute()\n   }, [])\n   return children\n}\n\nexport default RouteProvider","const Router = {\n   go: (path: string) => {\n      window.history.pushState({ pagex: true, path }, \"\", path)\n      dispatchEvent(new PopStateEvent(\"popstate\", { state: { pagex: true, path } }))\n   },\n   reload: () => {\n      dispatchEvent(new PopStateEvent(\"popstate\", {\n         state: {\n            path: window.location.pathname,\n            pagex: true\n         }\n      }))\n   },\n   back: () => window.history.back(),\n   forward: () => window.history.forward()\n}\n\nexport default Router","import { useState, useMemo, useEffect, useId } from 'react'\nimport { Factory, PathString, FactoryItem } from \"../factory\"\nimport Parser from \"../Parser\";\n\nconst useMatch = (path?: PathString) => {\n   const id = useId()\n   const [, dispatch] = useState(0)\n\n   useMemo(() => {\n      let params = null\n      if (path) {\n         params = Parser.isMatch(path, window.location.pathname)\n      }\n      Factory.set(id, {\n         id,\n         params,\n         dispatch: () => { },\n         path\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n\n   useEffect(() => {\n      Factory.set(id, {\n         ...Factory.get(id) as FactoryItem,\n         dispatch: () => dispatch(Math.random())\n      })\n\n      return () => {\n         Factory.delete(id)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n\n   const item = Factory.get(id)\n   return item?.params\n}\n\n\nexport default useMatch","import { ComponentType, createElement, FC, ReactElement } from 'react'\nimport Router from '../hooks/Router'\n\nexport interface LinkProps {\n   children?: string | ReactElement;\n   label?: string;\n   href: string;\n   noHref?: boolean;\n   component?: ComponentType<any>\n}\n\n\nconst Link: FC<LinkProps> = ({ href, noHref, children, label, component }) => {\n   return createElement(component || 'a', {\n      ...(noHref !== false ? { href } : {}),\n      onClick: (e: any) => {\n         e.preventDefault()\n         Router.go(href)\n      }\n   }, children || label)\n}\n\nexport default Link","import React, { ComponentType } from 'react'\nimport useMatch from '../hooks/useMatch'\n\n\ntype RenderProps = {\n   params?: { [key: string]: any };\n}\n\nexport interface RouteProps {\n   path?: string;\n   render: ComponentType<RenderProps>;\n}\n\nconst Route = ({ path, render: Render }: RouteProps) => {\n   const params = useMatch(path)\n   return params ? <Render params={params} /> : <></>\n}\n\nexport default Route","import RouteProvider from './components/RouteProvider'\nimport Router from \"./hooks/Router\"\nimport useMatch from \"./hooks/useMatch\"\nimport Link, { LinkProps } from \"./components/Link\"\nimport Route, { RouteProps } from \"./components/Route\"\nimport Parser from \"./Parser\"\nexport { RouteProvider, Link, useMatch, Router, Route, Parser }\nexport type { LinkProps, RouteProps }\n\nexport const useQuery = Parser.parseQuery\n"],"names":["parseQuery","q","window","location","search","query_string","substring","vars","split","query","i","length","pair","decodeURIComponent","isMatch","regex_path","path","m","match","decode","matches","params","Parser","Factory","Map","Excute","isMatched","invalids","forEach","item","key","set","dispatch","pathname","push","id","addEventListener","RouteProvider","children","useEffect","Router","go","history","pushState","pagex","dispatchEvent","PopStateEvent","state","reload","back","forward","useMatch","useId","useState","useMemo","get","Math","random","Link","href","noHref","label","component","createElement","onClick","e","preventDefault","Route","Render","render","React","useQuery"],"mappings":"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"}